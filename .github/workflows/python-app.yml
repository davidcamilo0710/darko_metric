# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Darko Automate

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mysqlclient
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install Chrome and Chromedriver
      run: |
        apt-get install -y wget xvfb unzip
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
        echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list
        apt-get update -y

        # Set up Chromedriver Environment variables and install chrome
        CHROMEDRIVER_VERSION="114.0.5735.90"
        CHROME_VERSION="114.0.5735.90-1"
        wget --no-verbose -O /tmp/chrome.deb "https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${CHROME_VERSION}_amd64.deb"
        apt install -y /tmp/chrome.deb
        rm /tmp/chrome.deb

        CHROMEDRIVER_DIR="/chromedriver"
        mkdir $CHROMEDRIVER_DIR

        # Download and install Chromedriver
        wget -q --continue -P $CHROMEDRIVER_DIR "http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
        unzip $CHROMEDRIVER_DIR/chromedriver* -d $CHROMEDRIVER_DIR

        # Put Chromedriver into the PATH
        export PATH=$CHROMEDRIVER_DIR:$PATH        
       
    - name: Execute script
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
      run: |
          python app.py
